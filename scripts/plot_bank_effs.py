import os

import click
import jax.numpy as jnp
import matplotlib.pyplot as plt

plt.style.use("../plot_style.mplstyle")

"""
Plots effectualness histograms for the main three banks in the diffbank paper.

The banks are generated by running the following scripts:

    >>> python genbank_2D_threePN.py --seed 1 --kind random
    >>> python genbank_3D_taylorf2reducedspin.py --seed 1 --kind random
    >>> python genbank_4D_taylorf2.py --seed 1 --kind random
"""


@click.command()
def run():
    bank_dir = "banks"

    effs_3pn = jnp.load(
        os.path.join(bank_dir, "3pn-random-1-mm=0.95-eta_star=0.9-n_eff=1000.npz"),
        allow_pickle=True,
    )["bank"].item()["effectualnesses"]

    effs_tf2rs = jnp.load(
        os.path.join(bank_dir, "tf2rs-random-1-mm=0.95-eta_star=0.993-n_eff=1300.npz"),
        allow_pickle=True,
    )["bank"].item()["effectualnesses"]

    effs_tf2 = jnp.load(
        os.path.join(bank_dir, "tf2-random-1-mm=0.96-eta_star=0.9-n_eff=1000.npz"),
        allow_pickle=True,
    )["bank"].item()["effectualnesses"]

    hist_kwargs = dict(
        cumulative=True, density=True, histtype="step", bins=jnp.linspace(0, 1.0, 101)
    )
    plt.hist(effs_3pn, label="3.5PN-2D", **hist_kwargs)
    plt.hist(effs_tf2rs, label="2.5PN-3D", **hist_kwargs)
    plt.hist(effs_tf2, label="3.5PN-4D", **hist_kwargs)

    # Minimum mismatches
    for i, mm in enumerate([0.95, 0.95, 0.96]):
        plt.axvline(mm, color=f"C{i}", linestyle="--", linewidth=1)

    # Target coverage
    # plt.axhline(1 - 0.9, color="C0", linestyle="--", linewidth=1)
    # plt.axhline(1 - 0.993, color="C1", linestyle="--", linewidth=1)
    # plt.axhline(1 - 0.9, color="C2", linestyle="--", linewidth=1)
    for i, eta in enumerate([0.9, 0.993, 0.9]):
        eta_err = jnp.sqrt((eta * (1 - eta)) / 1000)
        plt.axhspan(
            1 - (eta + 2 * eta_err), 1 - (eta - 2 * eta_err), color=f"C{i}", alpha=0.1
        )

    eta = 0.9
    eta_err = jnp.sqrt((eta * (1 - eta)) / 1000)
    plt.text(
        0.905,
        9.8e-2,
        r"$\hat{\eta} = %.3f \pm %.3f$" % (eta, 2 * eta_err),
        fontsize=12,
        va="center",
        color="C0",
        ha="right",
        alpha=0.5,
    )
    plt.text(
        0.905,
        9.8e-2,
        r"$\hat{\eta} = %.3f \pm %.3f$" % (eta, 2 * eta_err),
        fontsize=12,
        va="center",
        color="C2",
        ha="right",
        alpha=0.5,
    )
    eta = 0.993
    eta_err = jnp.sqrt((eta * (1 - eta)) / 1000)
    plt.text(
        0.905,
        4.5e-3,
        r"$\hat{\eta} = %.3f \pm %.3f$" % (eta, 2 * eta_err),
        fontsize=12,
        va="center",
        color="C1",
        ha="right",
    )

    # plt.text(0.954, 1e-2, r"$m_*$")
    # plt.text(0.87, 1.3e-1, r"$1 - \eta$")

    plt.xlim(0.7, 1.0)
    plt.ylim(1e-3, 1.2)
    plt.yscale("log")
    plt.legend(loc="upper left", frameon=False)
    plt.xlabel("Effectualness")
    plt.ylabel("CDF")

    # plt.tight_layout()
    plt.savefig("figures/bank-effs.pdf", bbox_inches="tight")


if __name__ == "__main__":
    run()
